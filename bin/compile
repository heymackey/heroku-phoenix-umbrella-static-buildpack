#!/usr/bin/env bash
shopt -s nullglob
set -o errexit
set -o pipefail
unset GIT_DIR

if [[ ! "$MIX_ENV" == "prod" ]]; then
  function mix {
    print_indented "mix $*"
  }
fi

buildpack_root=$(realpath "$(dirname "$(dirname "$BASH_SOURCE[0]")")")
lib_path="${buildpack_root}/lib"

build_path=$(realpath "$1")
cache_path=$(realpath "$2")
env_path=$(realpath "$3")
heroku_path="${build_path}/.heroku"

source "$lib_path/utils.sh"
source "$lib_path/build.sh"

mkdir -p "$build_path" "$cache_path" "$env_path"
mkdir -p "${build_path}/.heroku"
load_config "$buildpack_root" "$build_path"

node_src_path="${cache_path}/node-v${node_version}-linux-x64.tar.gz"

validate_assets_paths "$assets_paths"
IFS=', ' read -r -a app_assets <<< "$assets_paths"

export_config_vars
export_mix_env

download_node "$node_src_path" "$node_version"
install_node "$node_src_path" "${heroku_path}/node"
install_npm "$build_dir" "$npm_version"

for assets_path in "${app_assets[@]}"; do
  package_root="${build_path}/${assets_path}"
  app_path="$(dirname $package_root)"
  custom_script="$package_root/compile_static_assets.sh"

  install_npm_dependencies "$package_root"
  cache_npm_dependencies "$package_root" "$cache_path"

  if [[ -f "$custom_script" ]]; then
    print_heading "Custom compile_static_assets.sh deploy..."
    echo "run custom script"
  else
    print_heading "Default Phoenix deploy..."
    default_phoenix_deploy "$package_root" "$app_path"
  fi
done

cd "$buildpack_root"

print_success "Assets successfully built!"
rm -rf "${heroku_path}/node"
